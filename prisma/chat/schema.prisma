generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma/db-chat"
}

datasource db {
  provider = "postgresql"
  url      = env("CHAT_DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String @unique
  imageUrl String @db.Text

  members Member[]

  conversationsInitiated Conversation[]        @relation("UserOne")
  conversationsReceived  Conversation[]        @relation("UserTwo")
  conversationMessages   ConversationMessage[] @relation("Sender")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GUEST)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@map("members")
}

model Message {
  id      String @id @default(uuid())
  content String @db.Text

  fileUrl String? @db.Text

  memberId String
  member   Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

  channelId String

  deleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([channelId])
  @@index([memberId])
  @@map("messages")
}

model Conversation {
  id String @id @default(uuid())

  userOneId String
  userOne   User   @relation("UserOne", fields: [userOneId], references: [id], onDelete: Cascade)
  userTwoId String
  userTwo   User   @relation("UserTwo", fields: [userTwoId], references: [id], onDelete: Cascade)

  ConversationMessage ConversationMessage[] @relation("MessagesConversation")

  @@unique([userOneId, userTwoId])
  @@unique([userTwoId, userOneId])
  @@index([userOneId])
  @@index([userTwoId])
  @@map("conversations")
}

model ConversationMessage {
  id      String  @id @default(uuid())
  content String  @db.Text
  fileUrl String? @db.Text

  conversationId String
  conversation   Conversation @relation("MessagesConversation", fields: [conversationId], references: [id], onDelete: Cascade)

  senderId String
  sender   User   @relation("Sender", fields: [senderId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deleted Boolean @default(false)

  @@index([conversationId])
  @@index([senderId])
  @@map("conversations_messages")
}
